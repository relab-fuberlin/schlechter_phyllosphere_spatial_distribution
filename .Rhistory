q()
.libPaths()
find.package("tidyverse")
R.home()
install.packages('renv')
renv::init()
pwd
wd
pwd()
?setwd
getwd()
source("./code/libraries_syncom.R")
source(".code/palette_syncom.R")
source("./code/libraries_syncom.R")
setwd("~/Desktop/repo/schlechter_spatial_xxxxx_2023")
source("./code/libraries_syncom.R")
source("./code/libraries_syncom.R")
source("./code/palette_syncom.R")
cfu = read.csv("./data/cfu.csv",header = T) %>%
mutate(log = log10(cfu),
exp = interaction(exp, syn, sep = "_"),
comm = interaction(syn, comm, sep = "_"),
id = paste(exp, sample, sep="_")) %>%
na.omit()
.libPaths()
?setwd
getwd()
install.packages("here")
librar(here)
library(here)
here()
here("code/")
read.csv(here("data/cfu.csv"))
read.csv(here("data/cfu.csv")) %>% head
##  LIBRARIES USED FOR SPATIAL DISTRIBUTION PAPER
# library
# tidy data
library(here)
library(tidyverse)
library(reshape2)
library(broom)
library(magrittr)
# plots
library(patchwork)
library(gridExtra)
library(RColorBrewer)
library(ggh4x)
library(ggpubr)
library(ggtern)
library(ggbeeswarm)
# stats
library(car)
library(emmeans)
library(lsr)
library(multcompView)
library(spatstat)
library(MESS)
library(MASS)
library(betareg)
# dependencies
source(here("code/theme_rs_spatial.R"))
# Data processing CFU data
source(here("code/libraries_syncom.R"))
read.csv(here("data/cfu.csv")) %>% head
read.csv(here("data/cfu.csv")) %>%
mutate(cfu_log = log10(cfu))
cfu_data = read.csv(here("data/cfu.csv")) %>%
mutate(cfu_log = log10(cfu))
cfu_data %>% head
cfu_summary = cfu_data %>%
group_by(syncom, strain, dpi, taxa) %>%
summarise(mean = mean(cfu_log),
sd = sd(cfu_log),
cv = sd/mean*100)
cfu_summary
# Summary data
cfu_summary = cfu_data %>%
group_by(syncom, strain, dpi, taxa) %>%
summarise(mean = mean(cfu_log),
sd = sd(cfu_log),
cv = sd/mean*100,
.groups = drop)
# Summary data
cfu_summary = cfu_data %>%
group_by(syncom, strain, dpi, taxa) %>%
summarise(mean = mean(cfu_log),
sd = sd(cfu_log),
cv = sd/mean*100,
.groups = "drop")
cfu_summary
# Summary data
cfu_summary = cfu_data %>%
group_by(syn, syncom, strain, dpi, taxa) %>%
summarise(mean = mean(cfu_log),
sd = sd(cfu_log),
cv = sd/mean*100,
.groups = "drop")
# Summary data
cfu_summary = cfu_data %>%
group_by(synID, syncom, strain, dpi, taxa) %>%
summarise(mean = mean(cfu_log),
sd = sd(cfu_log),
cv = sd/mean*100,
.groups = "drop")
cfu_summary
cfu_data
cfu_data %>% head
cfu_data = read.csv(here("data/cfu.csv")) %>%
mutate(cfu_log = log10(cfu),
sample = factor(sample))
# Summary data
cfu_summary = cfu_data %>%
group_by(synID, syncom, strain, dpi, taxa) %>%
summarise(mean = mean(cfu_log),
sd = sd(cfu_log),
cv = sd/mean*100,
.groups = "drop")
# Total CFU per sample
total_cfu = cfu_data %>%
group_by(exp, synID, comm, taxa, dpi, sample) %>%
summarise(cfu_total = sum(cfu),
log_total = log10(cfu.total))
# Total CFU per sample
total_cfu = cfu_data %>%
group_by(exp, synID, comID, taxa, dpi, sample) %>%
summarise(cfu_total = sum(cfu),
log_total = log10(cfu.total))
# Total CFU per sample
total_cfu = cfu_data %>%
group_by(exp, synID, comID, taxa, dpi, sample) %>%
summarise(cfu_total = sum(cfu),
log_total = log10(cfu_total))
# Total CFU per sample
total_cfu = cfu_data %>%
group_by(exp, synID, comID, taxa, dpi, sample) %>%
summarise(cfu_total = sum(cfu),
log_total = log10(cfu_total),
.groups = "drop")
?.groups
??.groups
cfu_data = read.csv(here("data/cfu.csv")) %>%
mutate(cfu_log = log10(cfu),
sample = factor(sample)) %>%
saveRDS(here("results/cfu_data_processed.rds"))
# Summary data
cfu_data %>%
group_by(synID, syncom, strain, dpi, taxa) %>%
summarise(mean = mean(cfu_log),
sd = sd(cfu_log),
cv = sd/mean*100,
.groups = "drop") %>%
saveRDS(here("results/cfu_data_summary.rds"))
cfu_data %>%
group_by(exp, synID, comID, taxa, dpi, sample) %>%
summarise(cfu_total = sum(cfu),
log_total = log10(cfu_total),
.groups = "drop")
cfu_data %>%
group_by(exp, synID, comID, taxa, dpi, sample)
cfu_data = read.csv(here("data/cfu.csv")) %>%
mutate(cfu_log = log10(cfu),
sample = factor(sample))
saveRDS(cfu_data, here("results/cfu_data_processed.rds"))
# Summary data
cfu_data %>%
group_by(synID, syncom, strain, dpi, taxa) %>%
summarise(mean = mean(cfu_log),
sd = sd(cfu_log),
cv = sd/mean*100,
.groups = "drop") %>%
saveRDS(here("results/cfu_data_summary.rds"))
cfu_data %>%
group_by(exp, synID, comID, taxa, dpi, sample) %>%
summarise(cfu_total = sum(cfu),
log_total = log10(cfu_total),
.groups = "drop")
cfu_data
# Total CFU per sample
cfu_data %>%
group_by(exp, synID, comID, taxa, dpi, sample) %>%
summarise(cfu_total = sum(cfu),
log_total = log10(cfu_total),
.groups = "drop") %>%
saveRDS(here("results/cfu_total.rds"))
?write_csv
# library
# tidy data
library(here)
renv::status()
renv::snapshot()
?renv
renv::init
renv::init()
renv::status()
renv::snapshot()
